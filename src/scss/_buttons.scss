@use "sass:map";

.btn {
  &:focus,
  &.focus {
    outline: 0.25rem solid #2491ff;
    outline-offset: 0.25rem;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: uspto-color('gray', '200');
    pointer-events: none;
    &:focus,
    &.focus {
      outline: none;
    }
  }

  + .btn {
    margin-left: $btn-block-spacing-y;
  }
}

.btn-group-vertical {
  .btn + .btn {
    margin-left: 0;
  }
}

//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include hover {
      background-color: map.get($colors-variant, #{$color}-dark);
    }
    &.disabled,
    &:disabled {
      background-color: uspto-color('gray', '200');
    }
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
      background-color: map.get($colors-variant, #{$color}-dark);
    }
  }
  .btn-outline-#{$color} {
    box-shadow: $btn-box-shadow;
    @include hover {
      color: map.get($colors-variant, #{$color}-dark);
      background-color: transparent;
    }
    &:focus,
    &.focus {
      box-shadow: $btn-box-shadow;
    }
    &.disabled,
    &:disabled {
      color: uspto-color('gray', '200');
      background-color: transparent;
    }
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
      color: map.get($colors-variant, #{$color}-darker);
      background-color: transparent;
      &:focus {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $btn-box-shadow;
      }
    }
  }
}

.btn-outline-light {
  color: $light-dark;
  box-shadow: $btn-box-shadow;
  @include hover {
    color: $light;
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $light-lightest;
  }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  padding: 0;
  margin: 0;
  &.disabled,
  &:disabled {
    background-color: transparent;
  }
}

.btn-link-light {
  @extend .btn-link;
  color: uspto-color('gray', '300');
  @include hover {
    color: $light;
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $light-lightest;
  }
}

//button with material icons
.btn {
  &.md-icon {
    padding: 0.45rem 1rem;
  }
}
