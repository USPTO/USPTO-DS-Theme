@use "sass:math";

/**
 * Google Material Design Preloader
 *
 * CSS animated SVG implementation of the Google Material Design preloader
 *
 * Reference: http://goo.gl/ZfulRH
 * License: MIT
 * Author: Rudi Theunissen (rudolf.theunissen$gmail.com)
 * Version: 1.1.1
 */

/* spinner-wrapper is for IE */
.spinner-wrapper {
  display: block;
  position: relative;
  width: 100%;
  min-height: 100px;
  height: 100px;
  .spinner {
    position: absolute;
    overflow: hidden;
    left: 50%;
    margin-left: -50px;
    animation: outer-rotate 2.91667s linear infinite;
    .inner {
      width: 100px;
      height: 100px;
      position: relative;
      animation: sporadic-rotate 5.25s cubic-bezier(0.35, 0, 0.25, 1) infinite;
      .gap {
        position: absolute;
        left: 49px;
        right: 49px;
        top: 0;
        bottom: 0;
        border-top: 10px solid;
        box-sizing: border-box;
      }
      .left,
      .right {
        position: absolute;
        top: 0;
        height: 100px;
        width: 50px;
        overflow: hidden;
        .half-circle {
          position: absolute;
          top: 0;
          width: 100px;
          height: 100px;
          box-sizing: border-box;
          border: 10px solid #fff;
          border-bottom-color: transparent;
          border-radius: 50%;
        }
      }
      .left {
        left: 0;
        .half-circle {
          left: 0;
          border-right-color: transparent;
          animation: left-wobble 1.3125s cubic-bezier(0.35, 0, 0.25, 1) infinite;
          -webkit-animation: left-wobble 1.3125s cubic-bezier(0.35, 0, 0.25, 1)
            infinite;
        }
      }
      .right {
        right: 0;
        .half-circle {
          right: 0;
          border-left-color: transparent;
          animation: right-wobble 1.3125s cubic-bezier(0.35, 0, 0.25, 1)
            infinite;
          -webkit-animation: right-wobble 1.3125s cubic-bezier(0.35, 0, 0.25, 1)
            infinite;
        }
      }
    }
  }
  @keyframes outer-rotate {
    0% {
      transform: rotate(0deg) scale(0.5);
    }
    100% {
      transform: rotate(360deg) scale(0.5);
    }
  }
  @keyframes left-wobble {
    0%,
    100% {
      transform: rotate(130deg);
    }
    50% {
      transform: rotate(-5deg);
    }
  }
  @keyframes right-wobble {
    0%,
    100% {
      transform: rotate(-130deg);
    }
    50% {
      transform: rotate(5deg);
    }
  }
  @keyframes sporadic-rotate {
    12.5% {
      transform: rotate(135deg);
    }
    25% {
      transform: rotate(270deg);
    }
    37.5% {
      transform: rotate(405deg);
    }
    50% {
      transform: rotate(540deg);
    }
    62.5% {
      transform: rotate(675deg);
    }
    75% {
      transform: rotate(810deg);
    }
    87.5% {
      transform: rotate(945deg);
    }
    100% {
      transform: rotate(1080deg);
    }
  }
}

/* Spinner for all modern browsers */
$easing: cubic-bezier(0.8, 0, 0.4, 0.8);
$speed: 1320ms; // animation time for each loop
$linecap-variant: () !default;
$linecap-variant: map-merge(
  (
    square-end: square,
    round-end: round,
  ),
  $linecap-variant
);
$stroke-width-variant: () !default;
$stroke-width-variant: map-merge(
  (
    extra-thick: 8,
    thick: 6,
    normal: 4,
    thin: 2,
  ),
  $stroke-width-variant
);

html,
body {
  height: 100%;
}

.overlay {
  background-color: rgba($color: #000000, $alpha: 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  &.full-page {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.md-preloader {
  $loops: 5; // number of points where the arc meets
  $arc: 0.72; // fraction of the circumference that the arc grows to
  $perimeter: 67px * math.$pi; // circumference of the raw svg inner cricle

  // measure to prevent inline block spacing from affecting the outer rotation
  font-size: 0;

  display: inline-block;
  animation: outer $speed * $loops linear infinite;
  padding: 1rem;
  svg {
    animation: inner $speed linear infinite;
    height: 75px;
    width: 75px;

    circle {
      cx: 37.5;
      cy: 37.5;
      r: 33.5;
      fill: none;
      stroke: $white; //default value
      stroke-linecap: "round"; //default value
      stroke-width: 6; //default value
      animation: arc $speed $easing infinite;

      @each $color, $value in $theme-colors {
        &.circle-#{$color} {
          stroke: $value;
        }
      }
      @each $linecap, $value in $linecap-variant {
        &.circle-#{$linecap} {
          stroke-linecap: $value;
        }
      }
      @each $stroke-width, $value in $stroke-width-variant {
        &.circle-#{$stroke-width} {
          stroke-width: $value;
        }
      }
    }
  }

  @keyframes outer {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes inner {
    0% {
      transform: rotate(-360deg * (1 - $arc));
    }
    100% {
      transform: rotate(0);
    }
  }

  @keyframes arc {
    0% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: 0;
    }
    40% {
      stroke-dasharray: $arc * $perimeter, $perimeter;
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: -$arc * $perimeter;
    }
  }
}
